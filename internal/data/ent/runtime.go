// Code generated by ent, DO NOT EDIT.

package ent

import (
	"blug/internal/data/ent/article"
	"blug/internal/data/ent/friend"
	"blug/internal/data/ent/schema"
	"blug/internal/data/ent/task"
	"blug/internal/data/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescCreateTime is the schema descriptor for create_time field.
	articleDescCreateTime := articleFields[6].Descriptor()
	// article.DefaultCreateTime holds the default value on creation for the create_time field.
	article.DefaultCreateTime = articleDescCreateTime.Default.(string)
	// articleDescIsShow is the schema descriptor for is_show field.
	articleDescIsShow := articleFields[7].Descriptor()
	// article.DefaultIsShow holds the default value on creation for the is_show field.
	article.DefaultIsShow = articleDescIsShow.Default.(bool)
	// articleDescContent is the schema descriptor for content field.
	articleDescContent := articleFields[8].Descriptor()
	// article.DefaultContent holds the default value on creation for the content field.
	article.DefaultContent = articleDescContent.Default.(string)
	// articleDescID is the schema descriptor for id field.
	articleDescID := articleFields[0].Descriptor()
	// article.DefaultID holds the default value on creation for the id field.
	article.DefaultID = articleDescID.Default.(func() uuid.UUID)
	friendFields := schema.Friend{}.Fields()
	_ = friendFields
	// friendDescTitle is the schema descriptor for Title field.
	friendDescTitle := friendFields[1].Descriptor()
	// friend.DefaultTitle holds the default value on creation for the Title field.
	friend.DefaultTitle = friendDescTitle.Default.(string)
	// friendDescDesc is the schema descriptor for Desc field.
	friendDescDesc := friendFields[2].Descriptor()
	// friend.DefaultDesc holds the default value on creation for the Desc field.
	friend.DefaultDesc = friendDescDesc.Default.(string)
	// friendDescLink is the schema descriptor for Link field.
	friendDescLink := friendFields[3].Descriptor()
	// friend.DefaultLink holds the default value on creation for the Link field.
	friend.DefaultLink = friendDescLink.Default.(string)
	// friendDescAvatar is the schema descriptor for Avatar field.
	friendDescAvatar := friendFields[4].Descriptor()
	// friend.DefaultAvatar holds the default value on creation for the Avatar field.
	friend.DefaultAvatar = friendDescAvatar.Default.(string)
	// friendDescCreateTime is the schema descriptor for create_time field.
	friendDescCreateTime := friendFields[5].Descriptor()
	// friend.DefaultCreateTime holds the default value on creation for the create_time field.
	friend.DefaultCreateTime = friendDescCreateTime.Default.(func() time.Time)
	// friendDescID is the schema descriptor for id field.
	friendDescID := friendFields[0].Descriptor()
	// friend.DefaultID holds the default value on creation for the id field.
	friend.DefaultID = friendDescID.Default.(func() uuid.UUID)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescTaskID is the schema descriptor for task_id field.
	taskDescTaskID := taskFields[0].Descriptor()
	// task.DefaultTaskID holds the default value on creation for the task_id field.
	task.DefaultTaskID = taskDescTaskID.Default.(string)
	// taskDescTaskName is the schema descriptor for task_name field.
	taskDescTaskName := taskFields[1].Descriptor()
	// task.DefaultTaskName holds the default value on creation for the task_name field.
	task.DefaultTaskName = taskDescTaskName.Default.(string)
	// taskDescTaskType is the schema descriptor for task_type field.
	taskDescTaskType := taskFields[2].Descriptor()
	// task.DefaultTaskType holds the default value on creation for the task_type field.
	task.DefaultTaskType = taskDescTaskType.Default.(string)
	// taskDescStatus is the schema descriptor for status field.
	taskDescStatus := taskFields[3].Descriptor()
	// task.DefaultStatus holds the default value on creation for the status field.
	task.DefaultStatus = taskDescStatus.Default.(string)
	// taskDescReason is the schema descriptor for reason field.
	taskDescReason := taskFields[4].Descriptor()
	// task.DefaultReason holds the default value on creation for the reason field.
	task.DefaultReason = taskDescReason.Default.(string)
	// taskDescCreateTime is the schema descriptor for create_time field.
	taskDescCreateTime := taskFields[5].Descriptor()
	// task.DefaultCreateTime holds the default value on creation for the create_time field.
	task.DefaultCreateTime = taskDescCreateTime.Default.(string)
	// taskDescFinishTime is the schema descriptor for finish_time field.
	taskDescFinishTime := taskFields[6].Descriptor()
	// task.DefaultFinishTime holds the default value on creation for the finish_time field.
	task.DefaultFinishTime = taskDescFinishTime.Default.(string)
	// taskDescRetry is the schema descriptor for retry field.
	taskDescRetry := taskFields[7].Descriptor()
	// task.DefaultRetry holds the default value on creation for the retry field.
	task.DefaultRetry = taskDescRetry.Default.(int)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userFields[4].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
